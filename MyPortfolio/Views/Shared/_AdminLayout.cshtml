<!DOCTYPE html>

<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - Portfolio Management</title>
    <link href="~/lib/bootstrap/css/bootstrap.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="~/css/adminHome.css" rel="stylesheet" />
</head>
<body>
    <!-- Header -->
    <header class="admin-header">
        <div class="header-left">
            <button class="sidebar-toggle" id="sidebarToggle">
                <i class="bi bi-list"></i>
            </button>
            <a href="#" class="logo">
                <i class="bi bi-speedometer2"></i> Admin Panel
            </a>
        </div>
        <div class="header-right">
            <div class="search-box">
                <i class="bi bi-search search-icon"></i>
                <input type="text" class="search-input" placeholder="Search anything...">
            </div>
            <button class="btn btn-outline-primary btn-sm">
                <i class="bi bi-bell"></i>
            </button>
            <div class="profile-dropdown">
                <button class="profile-btn">
                    <div class="profile-avatar">JD</div>
                    <span class="d-none d-md-inline">John Doe</span>
                    <i class="bi bi-chevron-down"></i>
                </button>
            </div>
        </div>
    </header>

    <!-- Sidebar -->
    <nav class="sidebar" id="sidebar">
        <div class="sidebar-content">
            <div class="nav-section">
                <div class="nav-section-title">
                    <i class="bi bi-grid-3x3-gap"></i>
                    <span>Main</span>
                </div>
                <ul class="nav flex-column">
                    <li class="nav-item">
                        <a class="nav-link active" asp-controller="Admin" asp-action="Index">
                            <i class="bi bi-house-door nav-icon"></i>
                            <span class="nav-text">Dashboard</span>
                            <div class="nav-indicator"></div>
                        </a>
                    </li>
                </ul>
            </div>

            <div class="nav-section">
                <div class="nav-section-title">
                    <i class="bi bi-gear"></i>
                    <span>Management</span>
                </div>
                <ul class="nav flex-column">
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="Home" asp-action="Index">
                            <i class="bi bi-house nav-icon"></i>
                            <span class="nav-text">Home</span>
                            <div class="nav-indicator"></div>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="User" asp-action="Index">
                            <i class="bi bi-people nav-icon"></i>
                            <span class="nav-text">Users</span>
                            <div class="nav-indicator"></div>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="Role" asp-action="Index">
                            <i class="bi bi-shield-lock nav-icon"></i>
                            <span class="nav-text">Roles & Permissions</span>
                            <div class="nav-indicator"></div>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="Project" asp-action="Index">
                            <i class="bi bi-folder nav-icon"></i>
                            <span class="nav-text">Projects</span>
                            <div class="nav-indicator"></div>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="Contact" asp-action="Index">
                            <i class="bi bi-file-earmark-text nav-icon"></i>
                            <span class="nav-text">Contacts</span>
                            <div class="nav-indicator"></div>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="Education" asp-action="Index">
                            <i class="bi bi-file-earmark-text nav-icon"></i>
                            <span class="nav-text">Educations</span>
                            <div class="nav-indicator"></div>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="Expereience" asp-action="Index">
                            <i class="bi bi-file-earmark-text nav-icon"></i>
                            <span class="nav-text">Experiences</span>
                            <div class="nav-indicator"></div>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="SocialLink" asp-action="Index">
                            <i class="bi bi-file-earmark-text nav-icon"></i>
                            <span class="nav-text">Social Links</span>
                            <div class="nav-indicator"></div>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="Skill" asp-action="Index">
                            <i class="bi bi-file-earmark-text nav-icon"></i>
                            <span class="nav-text">Skills</span>
                            <div class="nav-indicator"></div>
                        </a>
                    </li>
                </ul>
            </div>

            <div class="nav-section">
                <ul class="nav flex-column">
                    <li class="nav-item mt-3">
                        <form asp-controller="Account" asp-action="Logout" method="post" class="d-inline">
                            <button type="submit" class="nav-link btn btn-link text-danger w-100 text-start" style="padding-left:1.5rem;">
                                <i class="bi bi-box-arrow-right nav-icon"></i>
                                <span class="nav-text">Logout</span>
                            </button>
                        </form>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <div>
        @RenderBody()
    </div>

    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
    <script src="~/lib/bootstrap/js/bootstrap.bundle.js"></script>
    <script src="~/js/site.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    @await RenderSectionAsync("Styles",required:false);
    @await RenderSectionAsync("Scripts",required:false);
    ;
    <script>
        // Sidebar Toggle Functionality
        const sidebarToggle = document.getElementById('sidebarToggle');
        const sidebar = document.getElementById('sidebar');
        const mainContent = document.querySelector('.main-content');

        sidebarToggle.addEventListener('click', () => {
            sidebar.classList.toggle('collapsed');
        });

        // Mobile Sidebar Toggle
        if (window.innerWidth <= 768) {
            sidebarToggle.addEventListener('click', () => {
                sidebar.classList.toggle('show');
            });
        }

        // Smooth Animations
        document.addEventListener('DOMContentLoaded', () => {
            const cards = document.querySelectorAll('.stat-card, .chart-card');
            cards.forEach((card, index) => {
                card.style.animationDelay = `${index * 0.1}s`;
                card.classList.add('fade-in');
            });
        });

        // Search Functionality (placeholder)
        const searchInput = document.querySelector('.search-input');
        searchInput.addEventListener('input', (e) => {
            // Implement search functionality here
            console.log('Searching for:', e.target.value);
        });

        // Real-time Updates (placeholder)
        function updateStats() {
            // This would typically fetch real data from your API
            const statValues = document.querySelectorAll('.stat-value');
            statValues.forEach(stat => {
                // Add subtle animation for value changes
                stat.style.transform = 'scale(1.05)';
                setTimeout(() => {
                    stat.style.transform = 'scale(1)';
                }, 200);
            });
        }

        // Update stats every 30 seconds (example)
        setInterval(updateStats, 30000);

        // Chart.js Implementation with better error handling
        function initializeCharts() {
            console.log('Initializing charts...');

            // Check if Chart.js is loaded
            if (typeof Chart === 'undefined') {
                console.error('Chart.js is not loaded');
                return;
            }

            // Analytics Chart (Line Chart)
            const analyticsCanvas = document.getElementById('analyticsChart');
            if (analyticsCanvas) {
                console.log('Creating analytics chart...');
                try {
                    new Chart(analyticsCanvas, {
                        type: 'line',
                        data: {
                            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                            datasets: [{
                                label: 'Users',
                                data: [65, 59, 80, 81, 56, 55, 40, 65, 75, 85, 95, 120],
                                backgroundColor: 'rgba(99, 102, 241, 0.1)',
                                borderColor: 'rgba(99, 102, 241, 1)',
                                borderWidth: 2,
                                fill: true,
                                tension: 0.4
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: true,
                                    position: 'top'
                                }
                            },
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    grid: {
                                        color: 'rgba(0, 0, 0, 0.1)'
                                    }
                                },
                                x: {
                                    grid: {
                                        color: 'rgba(0, 0, 0, 0.1)'
                                    }
                                }
                            }
                        }
                    });
                    console.log('Analytics chart created successfully');
                } catch (error) {
                    console.error('Error creating analytics chart:', error);
                }
            } else {
                console.error('Analytics canvas not found');
            }

            // Portfolio Views Chart (Bar Chart)
            const portfolioCanvas = document.getElementById('portfolioChart');
            if (portfolioCanvas) {
                console.log('Creating portfolio chart...');
                try {
                    new Chart(portfolioCanvas, {
                        type: 'bar',
                        data: {
                            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                            datasets: [{
                                label: 'Portfolio Views',
                                data: [120, 190, 300, 500, 200, 300, 450, 600, 750, 850, 950, 1200],
                                backgroundColor: 'rgba(54, 162, 235, 0.8)',
                                borderColor: 'rgba(54, 162, 235, 1)',
                                borderWidth: 1,
                                borderRadius: 4
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: true,
                                    position: 'top'
                                }
                            },
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    grid: {
                                        color: 'rgba(0, 0, 0, 0.1)'
                                    }
                                },
                                x: {
                                    grid: {
                                        color: 'rgba(0, 0, 0, 0.1)'
                                    }
                                }
                            }
                        }
                    });
                    console.log('Portfolio chart created successfully');
                } catch (error) {
                    console.error('Error creating portfolio chart:', error);
                }
            } else {
                console.error('Portfolio canvas not found');
            }

            // Skills Distribution Chart (Doughnut Chart)
            const skillsCanvas = document.getElementById('skillsChart');
            if (skillsCanvas) {
                console.log('Creating skills chart...');
                try {
                    new Chart(skillsCanvas, {
                        type: 'doughnut',
                        data: {
                            labels: ['C#', 'ASP.NET MVC', 'ASP.NET API', 'HTML', 'CSS', 'Angular', 'JavaScript'],
                            datasets: [{
                                label: 'Skills',
                                data: [90, 85, 85, 80, 75, 60, 70],
                                backgroundColor: [
                                    'rgba(255, 99, 132, 0.8)',
                                    'rgba(54, 162, 235, 0.8)',
                                    'rgba(255, 206, 86, 0.8)',
                                    'rgba(75, 192, 192, 0.8)',
                                    'rgba(153, 102, 255, 0.8)',
                                    'rgba(255, 159, 64, 0.8)'
                                ],
                                borderColor: [
                                    'rgba(255, 99, 132, 1)',
                                    'rgba(54, 162, 235, 1)',
                                    'rgba(255, 206, 86, 1)',
                                    'rgba(75, 192, 192, 1)',
                                    'rgba(153, 102, 255, 1)',
                                    'rgba(255, 159, 64, 1)'
                                ],
                                borderWidth: 2
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: true,
                                    position: 'right'
                                }
                            }
                        }
                    });
                    console.log('Skills chart created successfully');
                } catch (error) {
                    console.error('Error creating skills chart:', error);
                }
            } else {
                console.error('Skills canvas not found');
            }
        }

        // Initialize charts when DOM is loaded and Chart.js is available
        document.addEventListener('DOMContentLoaded', function() {
            console.log('DOM loaded, checking for Chart.js...');

            // Check if Chart.js is already loaded
            if (typeof Chart !== 'undefined') {
                console.log('Chart.js found, initializing charts immediately');
                initializeCharts();
            } else {
                console.log('Chart.js not found, waiting...');
                // Wait for Chart.js to load with multiple attempts
                let attempts = 0;
                const maxAttempts = 10;
                const checkInterval = setInterval(() => {
                    attempts++;
                    console.log(`Attempt ${attempts} to find Chart.js...`);

                    if (typeof Chart !== 'undefined') {
                        console.log('Chart.js loaded, initializing charts');
                        clearInterval(checkInterval);
                        initializeCharts();
                    } else if (attempts >= maxAttempts) {
                        console.error('Chart.js failed to load after', maxAttempts, 'attempts');
                        clearInterval(checkInterval);
                        // Show fallback message
                        document.querySelectorAll('.chart-container').forEach(container => {
                            container.innerHTML = '<div style="display: flex; align-items: center; justify-content: center; height: 100%; color: #999; font-size: 14px;">Chart failed to load. Please check your internet connection.</div>';
                        });
                    }
                }, 500);
            }
        });
    </script>
</body>
</html>
