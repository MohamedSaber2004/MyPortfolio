@using BusinessLogicLayer.DTos.ProjectDTos
@model ProjectDetailsDto
@{
    ViewData["Title"] = "Project Details";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    string webBase = "~/Files/Images/Projects/";
    string? stored = Model?.ProjectImage;
    string imgSrc = !string.IsNullOrWhiteSpace(stored)
        ? (
            stored.StartsWith("http://", System.StringComparison.OrdinalIgnoreCase) || stored.StartsWith("https://", System.StringComparison.OrdinalIgnoreCase)
                ? stored
                : Url.Content(
                    stored.StartsWith("~") || stored.StartsWith("/")
                        ? stored
                        : (stored.Contains("Files/Images/Projects", System.StringComparison.OrdinalIgnoreCase)
                            ? "~/" + stored.TrimStart('/')
                            : webBase + stored.TrimStart('/'))
                  )
          )
        : Url.Content("~/images/placeholders/project-placeholder.png");

    string startDate = Model!.StartDate.ToString("MMM dd, yyyy");
    string endDate = Model.EndDate.ToString("MMM dd, yyyy");
    string createdOn = Model.CreatedOn.ToString("MMM dd, yyyy HH:mm");
    string? lastModifiedOn = Model.LastModifiedOn?.ToString("MMM dd, yyyy HH:mm");
}

<main class="main-content">
    <div class="container my-4">
        <div class="row g-4">
            <div class="col-md-5 col-lg-4">
                <div class="card h-100 shadow-sm">
                    <img src="@imgSrc"
                         class="card-img-top img-fluid"
                         alt="@Model.Title"
                         onerror="this.onerror=null;this.src='@Url.Content("~/images/placeholders/project-placeholder.png")';" />
                    <div class="card-body">
                        <div class="d-flex align-items-start justify-content-between">
                            <h5 class="card-title mb-2">@Model.Title</h5>
                            @if (Model.IsDeleted)
                            {
                                <span class="badge bg-danger">Deleted</span>
                            }
                            else
                            {
                                <span class="badge bg-success">Active</span>
                            }
                        </div>
                        <div class="d-grid gap-2 mt-3">
                            @if (!string.IsNullOrWhiteSpace(Model.ProjectURL))
                            {
                                <a href="@Model.ProjectURL" class="btn btn-primary" target="_blank" rel="noopener">Open Project</a>
                            }
                            <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-7 col-lg-8">
                <div class="card h-100 shadow-sm">
                    <div class="card-body">
                        <h4 class="card-title mb-3">Overview</h4>
                        <p class="card-text">@Model.Description</p>

                        <hr />

                        <div class="row">
                            <div class="col-sm-6">
                                <dl class="row mb-0">
                                    <dt class="col-5">Start Date</dt>
                                    <dd class="col-7">@startDate</dd>

                                    <dt class="col-5">End Date</dt>
                                    <dd class="col-7">@endDate</dd>

                                    <dt class="col-5">Status</dt>
                                    <dd class="col-7">@((Model.IsDeleted) ? "Deleted" : "Active")</dd>
                                </dl>
                            </div>
                            <div class="col-sm-6">
                                <dl class="row mb-0">
                                    <dt class="col-5">Created By</dt>
                                    <dd class="col-7">@Model.CreatedBy</dd>

                                    <dt class="col-5">Created On</dt>
                                    <dd class="col-7">@createdOn</dd>

                                    @if (Model.LastModifiedOn.HasValue || !string.IsNullOrWhiteSpace(Model.LastModifiedBy))
                                    {
                                        <dt class="col-5">Modified By</dt>
                                        <dd class="col-7">@(!string.IsNullOrWhiteSpace(Model.LastModifiedBy) ? Model.LastModifiedBy : "-")</dd>

                                        <dt class="col-5">Modified On</dt>
                                        <dd class="col-7">@(!string.IsNullOrEmpty(lastModifiedOn) ? lastModifiedOn : "-")</dd>
                                    }
                                </dl>
                            </div>
                        </div>

                        <div class="mt-4 d-flex gap-2">
                            @if (Model.IsDeleted)
                            {
                                <form asp-action="Restore" asp-route-id="@Model.Id" method="post" class="d-inline">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-warning">Restore</button>
                                </form>
                            }
                            else
                            {
                                <form asp-action="Delete" asp-route-id="@Model.Id" method="post" class="d-inline" onsubmit="return confirm('Are you sure you want to delete this project?');">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-danger">Delete</button>
                                </form>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>