@using MyPortfolio.Models.ExperienceModels
@model ExperienceViewModel

@{
    ViewData["Title"] = "Edit Experience";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<main class="main-content">
    <div class="page-header mb-4 d-flex align-items-center justify-content-between flex-wrap gap-2">
        <div>
            <h1 class="page-title mb-1">Edit Experience</h1>
            <p class="page-subtitle mb-0">Update an existing experience record.</p>
        </div>
        <div class="d-flex align-items-center gap-2">
            <a asp-action="Index" class="btn btn-secondary">
                <i class="bi bi-arrow-left"></i> Back to List
            </a>
        </div>
    </div>

    @if (Model.IsDeleted)
    {
        <div class="alert alert-warning d-flex align-items-center gap-2">
            <i class="bi bi-exclamation-triangle-fill fs-5"></i>
            <div>
                This record is currently marked as deleted. You can update fields and save to keep it archived, or use Restore from the list to reactivate it.
            </div>
        </div>
    }

    <div class="card shadow border-0">
        <div class="card-body">
            <form asp-action="Edit"
                  asp-route-id="@Model.Id"
                  method="post"
                  autocomplete="off"
                  novalidate>
                @Html.AntiForgeryToken()

                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                <input type="hidden" asp-for="Id" />

                <div class="row g-3">
                    <div class="col-md-6">
                        <label asp-for="CompanyName" class="form-label"></label>
                        <input asp-for="CompanyName" class="form-control" />
                        <span asp-validation-for="CompanyName" class="text-danger"></span>
                    </div>

                    <div class="col-md-6">
                        <label asp-for="Role" class="form-label"></label>
                        <input asp-for="Role" class="form-control" />
                        <span asp-validation-for="Role" class="text-danger"></span>
                    </div>

                    <div class="col-md-3">
                        <label asp-for="StartDate" class="form-label"></label>
                        <input asp-for="StartDate" type="date" class="form-control" />
                        <span asp-validation-for="StartDate" class="text-danger"></span>
                    </div>

                    <div class="col-md-3">
                        <label asp-for="EndDate" class="form-label"></label>
                        <input asp-for="EndDate" type="date" class="form-control" />
                        <span asp-validation-for="EndDate" class="text-danger"></span>
                    </div>

                    <div class="col-12">
                        <label asp-for="Description" class="form-label"></label>
                        <textarea asp-for="Description" rows="4" class="form-control" ></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                </div>

                <div class="mt-4 d-flex gap-2 flex-wrap">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-save"></i> Save Changes
                    </button>
                    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
                </div>
            </form>
        </div>
    </div>
</main>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        (function () {
            const start = document.getElementById('StartDate');
            const end = document.getElementById('EndDate');
            if (start && end) {
                const enforce = () => {
                    if (start.value) {
                        end.min = start.value;
                        if (end.value && end.value < start.value) {
                            end.value = start.value;
                        }
                    } else {
                        end.removeAttribute('min');
                    }
                };
                start.addEventListener('change', enforce);
                end.addEventListener('change', enforce);
                enforce();
            }
        })();
    </script>
}

